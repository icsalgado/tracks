DIO - Formacao .net Developer

no terminal do vscode
	dotnet new console - ele cria o projeto na pasta
	dotnet run - para executar o cï¿½digo dentro da pasta

Sintaxe e tipos de dados em C#
	program.cs > ï¿½ a classe 
	.csproj > arquivo de projeto do c# - informaï¿½ï¿½es descritivas do projeto, xml com metadados
		output type se ï¿½ um executavel ou bibliotecas
		target framework versï¿½o do .net usada [ï¿½ possï¿½vel mudar a versï¿½o]
			no cli > dotnet --info > informa as versï¿½es instaladas mas uma versï¿½o nova pode quebrar o projeto
		os demais sï¿½o referentes a como o projeto deve se comportar
	
	diretorio obj > maior parte dos arquivos sï¿½o referentes ao debugger e compilaï¿½ï¿½o, raramente ï¿½ preciso manipula-la
	diretorio bin > os binï¿½rios dll, exe, pdb(podem ser usados para debug)
		esses dois diretï¿½rios sï¿½o gerados com > dotnet build > podem ser ignoradas para novas compilaï¿½ï¿½es

	Conceito de Classe:
		New folder > new C2 file > class
			nome da classe PascalCase
				prop > atalho para criar uma propriedade
				para criar um novo metodo
					public void Apresentar(){}

			o namespace nao necessariamente representa o caminho fisico, eh uma boa pratica usar identificaï¿½ï¿½es relevantes e relacionadas
			O @ pode identificar o uso de uma palavra reservado para uma outra finalidade mas nï¿½o ï¿½ indicado. Ex: string @class
			
			ao instanciar a pessoa dentro do Program ï¿½ preciso indicar o namespace onde estï¿½ a classe pessoa
				instanciar ï¿½ criar uma variavel, um objeto do tipo da classe desejada. ï¿½ constuido o objeto com a base da classe
				Ex: using SintaxeEtipos.Models
				tambem eh possivel instanciar usando o namespace porem ficara mais verboso
					ex: SintaxeEtipos.Models.Pessoa pes = new SintaxeEtipos.Models.Pessoa
	Cases
		padroes para escrita - camelCase, PascalCase, snake_case, spinal-case
		classes > PascalCase
		propriedades > PascalCase
		metodo > PascalCase
		variavel > camelCase
	Escrita de nomes
		sem abreviacoes
		nome da classe deve ser o mesmo do nome do arquivo.cs
		sem caracteres especiais, exceto _ 

Tipo Decimal eh recomendado para uso em valores monetarios

Casting de variaveis

	int numero = Convert.ToInt32("5"); //casting
		A diferenca entre eles esta no tratamento de valores nulos (Convert é representado por 0 sem erro no Parse o valor não pode ser nulo)
	int outroNumero = int.Parse("5"); //casting

	qualquer tipo pode ser convertido para string usando o .ToString()

	o casting implicito ocorre quando um tipo suporta outro
		double suporta int
		long suporta int
















DIO-FormacaoDotNetDeveloper - Operadores de atribuicao e casting > Tipos de operadores em Csharp - Fundamentos DotNet

