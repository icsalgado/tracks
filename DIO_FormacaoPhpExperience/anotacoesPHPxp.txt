

imagem com php e apache
FROM debian

RUN  apt-get update && apt-get install php -y \
	apache2 \
	libapache2-mod-php \
	php && apt-get clean

EXPOSE 80

CMD ["apache2ctl", "-D", "FOREGROUND"]


Tratamento de excecões
	InvalidArgumentException
		quando tem uma entrada de tipo não esperado
		
	throw
		lançar
	try
		tentar
	catch
		captura
	finally
		exibir informação por exemplo
		
ctrl g no vscode permite indicar a linha para debugar

Debug
	warning e notice, não interrompem a execução do sistema
	Parse error - erros de sintaxe
	Fatal error - tentativas de uso de funções e classes não definidas
	
	para exibir no pho.ini
		display_errors: ON
		error_reporting: E_ALL
		
	Reprodução > Diagnóstico > Correção > Reflexão
	
	tracing : echo, var_dump()
	
	XDebug 

Hierarquia
	Throwable
       /\       /\
   Error	Exception
   		/\     /\
   	1RuntimeEx	2LogicEx > SPL = Standard PHP Library
   
   1 UnexpectedValueException
   	quando um valor não corresponde a um conjunto de valores
   1 UnderFlowException
   	tentativa de acessar um valor de um recipiente que está vazio
   1 RandeException
   	erros de aritmética
   1 OverFlowException
   	tentativa de inserir elementos em um recipiente cheio
   1 OutOfBoundsException
   	chave inválida
   2 OutOfRangeException
   	indices inválidos
   2 LengthException
   	tamanhos inválidos
   2 InvalidArgumentException
   	argumento não é do tipo esperado
   2 DomainException
   	dados que não correspondem ao domínio
   2 BadFunctionCallException
   	problemas na chamada da função como parametros ausentes ou não definida
   	2 BadMethodCallException
   		argumentos ou metodos não definidos
   		
   		
GitHub

Todo código-fonte desenvolvido durante o curso foi versionado no GitHub, nos seguintes endereços:

https://github.com/roseneidesantos 

https://github.com/roseneidesantos/dio-aulas-excecoes.git 

https://github.com/roseneidesantos/dio-aulas-tratamento-de-excecoes.git

Bons estudos 

Composer
	reutilização de implementações
	Instalação 
		https://getcomposer.org/download/
	
	composer init
		vai criar arquivo de configuração
			composer.json
	Gerenciamento de dependencias
		packagist.org
			mpdf/mpdf 
			
		contexto dev
			no json "require-dev": {}
				dependencias necessárias na etapa de desenvolvimento, por exemplo os testes unitarios
		$ composer require mpdf/mpdf
		
		pode ser inseridas as dependencias no json e depois rodar o $ composer install
		
	composer.lock
		armazena a versão das dependencias usadas no projeto
	composer update
		muda o composer.lock
	composer remove
		remove dependencias
	vendor/autoload.php
	
	Dockerfile
		FROM debian

		RUN apt-get update && apt-get upgrade -y && apt-get install php -y && apt-get install p7zip-full -y && apt-get install git -y && apt-get clean

		EXPOSE 80
	
	index.php
		<?php

		require __DIR__ . "/vendor/autoload.php";
	
		$mpdf = new \Mpdf\Mpdf();
		$mpdf->WriteHTML('<h1>Hello world!</h1>');
		$mpdf->Output();
	
	
	http://github.com/lafraga93/composer-dio
