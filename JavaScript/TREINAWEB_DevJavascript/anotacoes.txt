TREINAWEB Formacao Desenvolvedor Javascript

Repositorio JS Fundamentos: https://github.com/treinaweb/treinaweb-javascript-fundamentos

Recomenda-se usar o javasript em um arquivo externo e chamar o script no final do body html

V8 eh o motor de interpretacao do javascript no Google Chrome

undefined e null são tipos primitivos usados para definir que algo ainda nao tem valor

o tipo number e usado para definir tipos numericos

a notacao cientifica pode ser usada como 2.998e8 sendo o e representando a multiplicacao de 10 seguido de 8 zeros

infinity e -infinity sao usados

NaN significa not a number

tanto faz o uso de '' ou "" para strings
	recomenda-se o uso de apenas um dos dois no codigo, o mais comum sao as aspas simples. As aspas duplas ou simples podem circundar suas opostas dentro da string
	
a ` ` pode ser usada com quebras de linha (template strings)
	`seu nome é ${nome}`
		template string considera as quebras de linha na hora de mostrar o resultado

O symbol eh unico e imutavel como uma constante e são usados como identificadores

A concatenacao de strings é feita com o +

typeof retorna o tipo da variavel

operador ternario
	condicao ? verdadeiro : falso

A tipagem é dinâmia

Declaração de variaveis
	var novaVariavel = 10;
	let outraVariavel; //impede a dupla declaração
	const CONSTANTE_PI = 3.14;
	
concatenação usa o +

recomendado usar o inglês

Undefined é uma varivel que não tem valor
Null é para representar que uma variavel ainda não tem nem zero


Quando uma função anônima é chamada dentro de outra chamada de função ela é um callback

quando uma arrow function só recebe um parametro/argumento pode ser omitido os () e quando só tem um return na função pode também omitir o return e as {}
	let dobro = numero => numero * 2;

constantes no JS não podem ser reatribuidas, mas as propriedades de um objeto podem ser alteradas

javascript object notation

JSON.stringfy(objeto)//trasforma em string

JSON.parse(JSON.stringfy(objeto))// transforma em objeto

Variaveis com tipo primitivo
	na passagem para outra variavel utiliza dois espaços de memoria e atribui o valor da primeira
	
Objetos
	na passagem para outro objeto ele utiliza uma referência ao local de memoria do primeiro objeto.
	para clonar um objeto
		objeto2 = JSON.parse(JSON.stringfy(objeto1));
		let lapis2 = {...lapis1}
	para comparar dois objetos
		JSON.stringfy(objeto1) === JSON.stringfy(objeto1)

Symbols
	são únicos e são acessiveis por uma variável
	não aparede no Object.keys
	não pode ser alterado facilmente



TW-FormacaoDevJavaScript - Finalizado com projeto jogo da velha no console do navegador e no nodejs - JS Fundamentos
